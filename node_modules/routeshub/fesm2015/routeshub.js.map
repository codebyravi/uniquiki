{"version":3,"file":"routeshub.js.map","sources":["ng://routeshub/generators/notes.ts","ng://routeshub/utils/indexer.ts","ng://routeshub/utils/path.ts","ng://routeshub/utils/state.ts","ng://routeshub/utils/enhance.ts","ng://routeshub/utils/refresh-children.ts","ng://routeshub/hub.ts","ng://routeshub/creators/createRoot.ts","ng://routeshub/creators/createFeature.ts"],"sourcesContent":["import { RootRoute, RootRouteNote, RouteNote } from '../interfaces';\n\n/**\n * Generators aren't available for now\n *\n * Lazy routes supports only string literals\n */\n\n/**\n * portable shortcut for the RootRoute cases\n */\nexport const rootNote: RootRoute = {\n  root: { path: '' }\n};\n\n/**\n * flexible shortcut for the RootRoute cases\n */\nconst setRootNote = <C = {}>(\n  options: RootRouteNote<C> = {} as RootRouteNote<C>\n): RouteNote<C> => ({\n  ...options,\n  path: ''\n});\n\n/**\n * sets note values\n */\nconst setNote = <C = {}>(options: RouteNote<C>): RouteNote<C> => ({\n  ...options\n});\n","/**\n * generator that keeps and generates unique identifiers\n */\nfunction* idfy(): IterableIterator<number> {\n  let index = 0;\n  while (true) {\n    const options = yield index++;\n\n    if (!options) {\n      continue;\n    }\n    index = options.reset ? -1 : index;\n  }\n}\n\n/**\n * provides ordered ids\n */\nexport const indexer = idfy();\n","/**\n * Prevents to record empty state paths\n */\nexport function setNotEmptyPath(state: string[], path: string): string[] {\n  return path !== '' ? [...state, path] : state;\n}\n\n/**\n * Checks multi path in a single route\n */\nexport function checkMultiPath(path: string): boolean {\n  const slashId = path ? path.indexOf('/') : -1;\n\n  return slashId !== -1;\n}\n\n/**\n * Prevents to record multi path in the state\n */\nexport function splitPath(path: string): string[] {\n  return path.split('/').filter((state: string) => !!state);\n}\n","import { Params } from '../interfaces';\nimport { setNotEmptyPath } from './path';\n\n/**\n * Assigns a value based on the parent's  state and a current path\n */\nexport const setState = (parentSlice, path) => {\n  if (path.includes('*')) {\n    return [path];\n  }\n\n  return parentSlice !== null\n    ? setNotEmptyPath(parentSlice.state, path)\n    : setNotEmptyPath(['/'], path);\n};\n\n/**\n * Absorbs and gives params out together\n */\nconst reduceParams = (params: Params, restParams: Params[]): Params =>\n  restParams.reduce(\n    (accParams: Params, param: Params): Params => ({\n      ...accParams,\n      ...param\n    }),\n    params\n  );\n\n/**\n * Replaces property with a value\n * Helps stateFn generating dynamic values\n */\nconst handleState = (params: Params, state: string[] = []): string[] =>\n  Object.keys(params).reduce(\n    (accState: string[], param: string): string[] =>\n      accState.map(\n        (slice: string): string =>\n          slice === `:${param}` ? params[param] : slice\n      ),\n    state\n  );\n\n/**\n * Supports dynamic paths\n */\nexport function stateFn(\n  state,\n  params?: Params,\n  ...otherParams: Params[]\n): string[] {\n  if (!params) {\n    return state;\n  }\n\n  const parameters =\n    otherParams.length === 0 ? params : reduceParams(params, otherParams);\n\n  return handleState(parameters, state);\n}\n","import { indexer } from './indexer';\nimport { InternalSlice, RoutesNotes, Slice, Structure } from '../interfaces';\nimport { checkMultiPath, splitPath } from './path';\nimport { setState, stateFn } from './state';\n\n/**\n * Describes an output of enhance fn\n *\n * Could be plain Slice or internal slice\n * with unprocessed children routes\n */\ntype Enhanced<R, C> = Slice<R> | InternalSlice<R, C>;\n\n/**\n * Serializes routes\n * to enhance capabilities\n */\nexport function enhance<R, C = {}>(\n  parentSlice: Structure | null,\n  routes: RoutesNotes<R, C | {}>\n): Enhanced<R, C> {\n  return Object.keys(routes).reduce(\n    (acc: Enhanced<R, C>, routeName: string): Enhanced<R, C> => {\n      const { children, path, lazy } = routes[routeName];\n      const state = setState(parentSlice, path);\n      const route = {\n        id: indexer.next().value,\n        parentId: parentSlice !== null ? parentSlice.id : null,\n        state,\n        stateFn: stateFn.bind(null, state),\n        path: checkMultiPath(path) ? splitPath(path) : path,\n        lazy: lazy || null,\n        routeName\n      };\n\n      /* tslint:disable:prefer-object-spread */\n      return Object.assign(acc, {\n        [routeName]: {\n          ...route,\n          children: children !== undefined ? enhance(route, children) : null\n        }\n      });\n    },\n    {} as Enhanced<R, C>\n  );\n}\n","import { InternalStructure, Slice } from '../interfaces';\n\n/**\n * refreshes children parent target\n * because of replacing them with a parent node\n */\nexport function refreshChildren<R, C>(parent: InternalStructure<C>): Slice<C> {\n  const children: Slice<C> = parent.children;\n  const inheritorId: number = parent.id + 1;\n  const inheritorName: string = Object.keys(children).find(\n    (routeName: string) => children[routeName].id === inheritorId\n  );\n\n  return Object.keys(children).reduce(\n    (acc: Slice<C>, name: string): Slice<C> => {\n      const parentId =\n        children[name].id === inheritorId\n          ? parent.parentId\n          : children[inheritorName].id;\n      const routeName =\n        name === inheritorName && name === 'root' ? parent.routeName : name;\n      const route = { ...children[name], parentId, routeName };\n\n      /* tslint:disable:prefer-object-spread */\n      /* https://github.com/Microsoft/TypeScript/issues/10727 */\n      return { ...(acc as object), [routeName]: route } as Slice<C>;\n    },\n    {} as Slice<C>\n  );\n}\n","/* tslint:disable:prefer-object-spread */\nimport { BehaviorSubject } from 'rxjs';\nimport { Hub, Slice } from './interfaces';\nimport { refreshChildren } from './utils/refresh-children';\n\n/**\n * stores routes states at the same level\n */\nexport const hub: BehaviorSubject<Hub<any>> = new BehaviorSubject(null);\n\n/**\n * Detects and handles children routes\n */\nconst entitify = <R, C>(routes: Slice<R>): Slice<R, C> =>\n  Object.keys(routes).reduce(\n    (acc: Slice<R, C>, routeName: string): Slice<R, C> =>\n      routes[routeName].children\n        ? Object.assign({}, acc, refreshChildren<R, C>(routes[routeName]))\n        : Object.assign({}, acc, { [routeName]: routes[routeName] }),\n    {} as Slice<R, C>\n  );\n\n/**\n * Returns the next hub value\n */\nexport function nextHubValue<R, C = {}>(\n  routeName: string,\n  routes: Slice<R>\n): Hub<Slice<R, C>> {\n  const slice: Slice<R> = entitify<R, C>(routes);\n\n  return Object.assign({}, hub.value, {\n    [routeName]: slice\n  }) as Hub<Slice<R, C>>;\n}\n","import { Hub, RoutesNotes, Slice } from '../interfaces';\nimport { enhance } from '../utils/enhance';\nimport { hub, nextHubValue } from '../hub';\n\n/**\n * Creates main parent routes\n * Entry point for the hub\n */\nexport function createRoot<R, C = {}>(\n  routes: RoutesNotes<R>,\n  routeName = 'app'\n): Slice<R & C> {\n  if (hub.value !== null) {\n    throw new Error('Routeshub is already declared');\n  }\n\n  const rootSlice: Slice<R> = enhance<R, C>(null, routes);\n  const initialRoutesState: Hub<Slice<R, C | {}>> = nextHubValue<R>(\n    routeName,\n    rootSlice\n  );\n\n  hub.next(initialRoutesState);\n\n  return hub.value[routeName];\n}\n","import { Hub, RoutesNotes, Slice, Structure } from '../interfaces';\nimport { enhance } from '../utils/enhance';\nimport { hub, nextHubValue } from '../hub';\n\n/**\n * Creates a feature route\n */\nexport function createFeature<R, C = {}>(\n  parentRoute: Structure,\n  routes: RoutesNotes<R>\n): Slice<R & C> {\n  const feature: Slice<R> = enhance<R, C>(parentRoute, routes);\n  const updatedRouteState: Hub<Slice<R, C | {}>> = nextHubValue<R>(\n    parentRoute.routeName,\n    feature\n  );\n  hub.next(updatedRouteState);\n\n  return hub.value[parentRoute.routeName];\n}\n"],"names":[],"mappings":"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"}
