/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/**
 * refreshes children parent target
 * because of replacing them with a parent node
 * @template R, C
 * @param {?} parent
 * @return {?}
 */
export function refreshChildren(parent) {
    /** @type {?} */
    var children = parent.children;
    /** @type {?} */
    var inheritorId = parent.id + 1;
    /** @type {?} */
    var inheritorName = Object.keys(children).find((/**
     * @param {?} routeName
     * @return {?}
     */
    function (routeName) { return children[routeName].id === inheritorId; }));
    return Object.keys(children).reduce((/**
     * @param {?} acc
     * @param {?} name
     * @return {?}
     */
    function (acc, name) {
        var _a;
        /** @type {?} */
        var parentId = children[name].id === inheritorId
            ? parent.parentId
            : children[inheritorName].id;
        /** @type {?} */
        var routeName = name === inheritorName && name === 'root' ? parent.routeName : name;
        /** @type {?} */
        var route = tslib_1.__assign({}, children[name], { parentId: parentId, routeName: routeName });
        /* tslint:disable:prefer-object-spread */
        /* https://github.com/Microsoft/TypeScript/issues/10727 */
        return (/** @type {?} */ (tslib_1.__assign({}, ((/** @type {?} */ (acc))), (_a = {}, _a[routeName] = route, _a))));
    }), (/** @type {?} */ ({})));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVmcmVzaC1jaGlsZHJlbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3JvdXRlc2h1Yi8iLCJzb3VyY2VzIjpbInV0aWxzL3JlZnJlc2gtY2hpbGRyZW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBTUEsTUFBTSxVQUFVLGVBQWUsQ0FBTyxNQUE0Qjs7UUFDMUQsUUFBUSxHQUFhLE1BQU0sQ0FBQyxRQUFROztRQUNwQyxXQUFXLEdBQVcsTUFBTSxDQUFDLEVBQUUsR0FBRyxDQUFDOztRQUNuQyxhQUFhLEdBQVcsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxJQUFJOzs7O0lBQ3RELFVBQUMsU0FBaUIsSUFBSyxPQUFBLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLEtBQUssV0FBVyxFQUF0QyxDQUFzQyxFQUM5RDtJQUVELE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxNQUFNOzs7OztJQUNqQyxVQUFDLEdBQWEsRUFBRSxJQUFZOzs7WUFDcEIsUUFBUSxHQUNaLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLEtBQUssV0FBVztZQUMvQixDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVE7WUFDakIsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsQ0FBQyxFQUFFOztZQUMxQixTQUFTLEdBQ2IsSUFBSSxLQUFLLGFBQWEsSUFBSSxJQUFJLEtBQUssTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJOztZQUMvRCxLQUFLLHdCQUFRLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBRSxRQUFRLFVBQUEsRUFBRSxTQUFTLFdBQUEsR0FBRTtRQUV4RCx5Q0FBeUM7UUFDekMsMERBQTBEO1FBQzFELE9BQU8sd0NBQUssQ0FBQyxtQkFBQSxHQUFHLEVBQVUsQ0FBQyxlQUFHLFNBQVMsSUFBRyxLQUFLLFFBQWMsQ0FBQztJQUNoRSxDQUFDLEdBQ0QsbUJBQUEsRUFBRSxFQUFZLENBQ2YsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnRlcm5hbFN0cnVjdHVyZSwgU2xpY2UgfSBmcm9tICcuLi9pbnRlcmZhY2VzJztcblxuLyoqXG4gKiByZWZyZXNoZXMgY2hpbGRyZW4gcGFyZW50IHRhcmdldFxuICogYmVjYXVzZSBvZiByZXBsYWNpbmcgdGhlbSB3aXRoIGEgcGFyZW50IG5vZGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlZnJlc2hDaGlsZHJlbjxSLCBDPihwYXJlbnQ6IEludGVybmFsU3RydWN0dXJlPEM+KTogU2xpY2U8Qz4ge1xuICBjb25zdCBjaGlsZHJlbjogU2xpY2U8Qz4gPSBwYXJlbnQuY2hpbGRyZW47XG4gIGNvbnN0IGluaGVyaXRvcklkOiBudW1iZXIgPSBwYXJlbnQuaWQgKyAxO1xuICBjb25zdCBpbmhlcml0b3JOYW1lOiBzdHJpbmcgPSBPYmplY3Qua2V5cyhjaGlsZHJlbikuZmluZChcbiAgICAocm91dGVOYW1lOiBzdHJpbmcpID0+IGNoaWxkcmVuW3JvdXRlTmFtZV0uaWQgPT09IGluaGVyaXRvcklkXG4gICk7XG5cbiAgcmV0dXJuIE9iamVjdC5rZXlzKGNoaWxkcmVuKS5yZWR1Y2UoXG4gICAgKGFjYzogU2xpY2U8Qz4sIG5hbWU6IHN0cmluZyk6IFNsaWNlPEM+ID0+IHtcbiAgICAgIGNvbnN0IHBhcmVudElkID1cbiAgICAgICAgY2hpbGRyZW5bbmFtZV0uaWQgPT09IGluaGVyaXRvcklkXG4gICAgICAgICAgPyBwYXJlbnQucGFyZW50SWRcbiAgICAgICAgICA6IGNoaWxkcmVuW2luaGVyaXRvck5hbWVdLmlkO1xuICAgICAgY29uc3Qgcm91dGVOYW1lID1cbiAgICAgICAgbmFtZSA9PT0gaW5oZXJpdG9yTmFtZSAmJiBuYW1lID09PSAncm9vdCcgPyBwYXJlbnQucm91dGVOYW1lIDogbmFtZTtcbiAgICAgIGNvbnN0IHJvdXRlID0geyAuLi5jaGlsZHJlbltuYW1lXSwgcGFyZW50SWQsIHJvdXRlTmFtZSB9O1xuXG4gICAgICAvKiB0c2xpbnQ6ZGlzYWJsZTpwcmVmZXItb2JqZWN0LXNwcmVhZCAqL1xuICAgICAgLyogaHR0cHM6Ly9naXRodWIuY29tL01pY3Jvc29mdC9UeXBlU2NyaXB0L2lzc3Vlcy8xMDcyNyAqL1xuICAgICAgcmV0dXJuIHsgLi4uKGFjYyBhcyBvYmplY3QpLCBbcm91dGVOYW1lXTogcm91dGUgfSBhcyBTbGljZTxDPjtcbiAgICB9LFxuICAgIHt9IGFzIFNsaWNlPEM+XG4gICk7XG59XG4iXX0=