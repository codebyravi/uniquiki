/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/* tslint:disable:prefer-object-spread */
import { BehaviorSubject } from 'rxjs';
import { refreshChildren } from './utils/refresh-children';
/**
 * stores routes states at the same level
 * @type {?}
 */
export var hub = new BehaviorSubject(null);
/**
 * Detects and handles children routes
 * @type {?}
 */
var entitify = (/**
 * @template R, C
 * @param {?} routes
 * @return {?}
 */
function (routes) {
    return Object.keys(routes).reduce((/**
     * @param {?} acc
     * @param {?} routeName
     * @return {?}
     */
    function (acc, routeName) {
        var _a;
        return routes[routeName].children
            ? Object.assign({}, acc, refreshChildren(routes[routeName]))
            : Object.assign({}, acc, (_a = {}, _a[routeName] = routes[routeName], _a));
    }), (/** @type {?} */ ({})));
});
var ɵ0 = entitify;
/**
 * Returns the next hub value
 * @template R, C
 * @param {?} routeName
 * @param {?} routes
 * @return {?}
 */
export function nextHubValue(routeName, routes) {
    var _a;
    /** @type {?} */
    var slice = entitify(routes);
    return (/** @type {?} */ (Object.assign({}, hub.value, (_a = {},
        _a[routeName] = slice,
        _a))));
}
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHViLmpzIiwic291cmNlUm9vdCI6Im5nOi8vcm91dGVzaHViLyIsInNvdXJjZXMiOlsiaHViLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUV2QyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7Ozs7O0FBSzNELE1BQU0sS0FBTyxHQUFHLEdBQThCLElBQUksZUFBZSxDQUFDLElBQUksQ0FBQzs7Ozs7SUFLakUsUUFBUTs7Ozs7QUFBRyxVQUFPLE1BQWdCO0lBQ3RDLE9BQUEsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNOzs7OztJQUN4QixVQUFDLEdBQWdCLEVBQUUsU0FBaUI7O1FBQ2xDLE9BQUEsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLFFBQVE7WUFDeEIsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLEdBQUcsRUFBRSxlQUFlLENBQU8sTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7WUFDbEUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLEdBQUcsWUFBSSxHQUFDLFNBQVMsSUFBRyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQUc7SUFGOUQsQ0FFOEQsR0FDaEUsbUJBQUEsRUFBRSxFQUFlLENBQ2xCO0FBTkQsQ0FNQyxDQUFBOzs7Ozs7Ozs7QUFLSCxNQUFNLFVBQVUsWUFBWSxDQUMxQixTQUFpQixFQUNqQixNQUFnQjs7O1FBRVYsS0FBSyxHQUFhLFFBQVEsQ0FBTyxNQUFNLENBQUM7SUFFOUMsT0FBTyxtQkFBQSxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxHQUFHLENBQUMsS0FBSztRQUNoQyxHQUFDLFNBQVMsSUFBRyxLQUFLO1lBQ2xCLEVBQW9CLENBQUM7QUFDekIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIHRzbGludDpkaXNhYmxlOnByZWZlci1vYmplY3Qtc3ByZWFkICovXG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEh1YiwgU2xpY2UgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xuaW1wb3J0IHsgcmVmcmVzaENoaWxkcmVuIH0gZnJvbSAnLi91dGlscy9yZWZyZXNoLWNoaWxkcmVuJztcblxuLyoqXG4gKiBzdG9yZXMgcm91dGVzIHN0YXRlcyBhdCB0aGUgc2FtZSBsZXZlbFxuICovXG5leHBvcnQgY29uc3QgaHViOiBCZWhhdmlvclN1YmplY3Q8SHViPGFueT4+ID0gbmV3IEJlaGF2aW9yU3ViamVjdChudWxsKTtcblxuLyoqXG4gKiBEZXRlY3RzIGFuZCBoYW5kbGVzIGNoaWxkcmVuIHJvdXRlc1xuICovXG5jb25zdCBlbnRpdGlmeSA9IDxSLCBDPihyb3V0ZXM6IFNsaWNlPFI+KTogU2xpY2U8UiwgQz4gPT5cbiAgT2JqZWN0LmtleXMocm91dGVzKS5yZWR1Y2UoXG4gICAgKGFjYzogU2xpY2U8UiwgQz4sIHJvdXRlTmFtZTogc3RyaW5nKTogU2xpY2U8UiwgQz4gPT5cbiAgICAgIHJvdXRlc1tyb3V0ZU5hbWVdLmNoaWxkcmVuXG4gICAgICAgID8gT2JqZWN0LmFzc2lnbih7fSwgYWNjLCByZWZyZXNoQ2hpbGRyZW48UiwgQz4ocm91dGVzW3JvdXRlTmFtZV0pKVxuICAgICAgICA6IE9iamVjdC5hc3NpZ24oe30sIGFjYywgeyBbcm91dGVOYW1lXTogcm91dGVzW3JvdXRlTmFtZV0gfSksXG4gICAge30gYXMgU2xpY2U8UiwgQz5cbiAgKTtcblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBuZXh0IGh1YiB2YWx1ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gbmV4dEh1YlZhbHVlPFIsIEMgPSB7fT4oXG4gIHJvdXRlTmFtZTogc3RyaW5nLFxuICByb3V0ZXM6IFNsaWNlPFI+XG4pOiBIdWI8U2xpY2U8UiwgQz4+IHtcbiAgY29uc3Qgc2xpY2U6IFNsaWNlPFI+ID0gZW50aXRpZnk8UiwgQz4ocm91dGVzKTtcblxuICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgaHViLnZhbHVlLCB7XG4gICAgW3JvdXRlTmFtZV06IHNsaWNlXG4gIH0pIGFzIEh1YjxTbGljZTxSLCBDPj47XG59XG4iXX0=