(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs')) :
    typeof define === 'function' && define.amd ? define('routeshub', ['exports', 'rxjs'], factory) :
    (factory((global.routeshub = {}),global.rxjs));
}(this, (function (exports,rxjs) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * portable shortcut for the RootRoute cases
     * @type {?}
     */
    var rootNote = {
        root: { path: '' }
    };

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * generator that keeps and generates unique identifiers
     * @return {?}
     */
    function idfy() {
        var index, options;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    index = 0;
                    _a.label = 1;
                case 1:
                    return [4 /*yield*/, index++];
                case 2:
                    options = _a.sent();
                    if (!options) {
                        return [3 /*break*/, 1];
                    }
                    index = options.reset ? -1 : index;
                    return [3 /*break*/, 1];
                case 3: return [2 /*return*/];
            }
        });
    }
    /**
     * provides ordered ids
     * @type {?}
     */
    var indexer = idfy();

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * Prevents to record empty state paths
     * @param {?} state
     * @param {?} path
     * @return {?}
     */
    function setNotEmptyPath(state, path) {
        return path !== '' ? __spread(state, [path]) : state;
    }
    /**
     * Checks multi path in a single route
     * @param {?} path
     * @return {?}
     */
    function checkMultiPath(path) {
        /** @type {?} */
        var slashId = path ? path.indexOf('/') : -1;
        return slashId !== -1;
    }
    /**
     * Prevents to record multi path in the state
     * @param {?} path
     * @return {?}
     */
    function splitPath(path) {
        return path.split('/').filter(( /**
         * @param {?} state
         * @return {?}
         */function (state) { return !!state; }));
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * Assigns a value based on the parent's  state and a current path
     * @type {?}
     */
    var setState = ( /**
     * @param {?} parentSlice
     * @param {?} path
     * @return {?}
     */function (parentSlice, path) {
        if (path.includes('*')) {
            return [path];
        }
        return parentSlice !== null
            ? setNotEmptyPath(parentSlice.state, path)
            : setNotEmptyPath(['/'], path);
    });
    /**
     * Absorbs and gives params out together
     * @type {?}
     */
    var reduceParams = ( /**
     * @param {?} params
     * @param {?} restParams
     * @return {?}
     */function (params, restParams) {
        return restParams.reduce(( /**
         * @param {?} accParams
         * @param {?} param
         * @return {?}
         */function (accParams, param) { return (__assign({}, accParams, param)); }), params);
    });
    /**
     * Replaces property with a value
     * Helps stateFn generating dynamic values
     * @type {?}
     */
    var handleState = ( /**
     * @param {?} params
     * @param {?=} state
     * @return {?}
     */function (params, state) {
        if (state === void 0) {
            state = [];
        }
        return Object.keys(params).reduce(( /**
         * @param {?} accState
         * @param {?} param
         * @return {?}
         */function (accState, param) {
            return accState.map(( /**
             * @param {?} slice
             * @return {?}
             */function (slice) {
                return slice === ":" + param ? params[param] : slice;
            }));
        }), state);
    });
    /**
     * Supports dynamic paths
     * @param {?} state
     * @param {?=} params
     * @param {...?} otherParams
     * @return {?}
     */
    function stateFn(state, params) {
        var otherParams = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            otherParams[_i - 2] = arguments[_i];
        }
        if (!params) {
            return state;
        }
        /** @type {?} */
        var parameters = otherParams.length === 0 ? params : reduceParams(params, otherParams);
        return handleState(parameters, state);
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * Serializes routes
     * to enhance capabilities
     * @template R, C
     * @param {?} parentSlice
     * @param {?} routes
     * @return {?}
     */
    function enhance(parentSlice, routes) {
        return Object.keys(routes).reduce(( /**
         * @param {?} acc
         * @param {?} routeName
         * @return {?}
         */function (acc, routeName) {
            var _a;
            var _b = routes[routeName], children = _b.children, path = _b.path, lazy = _b.lazy;
            /** @type {?} */
            var state = setState(parentSlice, path);
            /** @type {?} */
            var route = {
                id: indexer.next().value,
                parentId: parentSlice !== null ? parentSlice.id : null,
                state: state,
                stateFn: stateFn.bind(null, state),
                path: checkMultiPath(path) ? splitPath(path) : path,
                lazy: lazy || null,
                routeName: routeName
            };
            /* tslint:disable:prefer-object-spread */
            return Object.assign(acc, (_a = {},
                _a[routeName] = __assign({}, route, { children: children !== undefined ? enhance(route, children) : null }),
                _a));
        }), ( /** @type {?} */({})));
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * refreshes children parent target
     * because of replacing them with a parent node
     * @template R, C
     * @param {?} parent
     * @return {?}
     */
    function refreshChildren(parent) {
        /** @type {?} */
        var children = parent.children;
        /** @type {?} */
        var inheritorId = parent.id + 1;
        /** @type {?} */
        var inheritorName = Object.keys(children).find(( /**
         * @param {?} routeName
         * @return {?}
         */function (routeName) { return children[routeName].id === inheritorId; }));
        return Object.keys(children).reduce(( /**
         * @param {?} acc
         * @param {?} name
         * @return {?}
         */function (acc, name) {
            var _a;
            /** @type {?} */
            var parentId = children[name].id === inheritorId
                ? parent.parentId
                : children[inheritorName].id;
            /** @type {?} */
            var routeName = name === inheritorName && name === 'root' ? parent.routeName : name;
            /** @type {?} */
            var route = __assign({}, children[name], { parentId: parentId, routeName: routeName });
            /* tslint:disable:prefer-object-spread */
            /* https://github.com/Microsoft/TypeScript/issues/10727 */
            return ( /** @type {?} */(__assign({}, (( /** @type {?} */(acc))), (_a = {}, _a[routeName] = route, _a))));
        }), ( /** @type {?} */({})));
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * stores routes states at the same level
     * @type {?}
     */
    var hub = new rxjs.BehaviorSubject(null);
    /**
     * Detects and handles children routes
     * @type {?}
     */
    var entitify = ( /**
     * @template R, C
     * @param {?} routes
     * @return {?}
     */function (routes) {
        return Object.keys(routes).reduce(( /**
         * @param {?} acc
         * @param {?} routeName
         * @return {?}
         */function (acc, routeName) {
            var _a;
            return routes[routeName].children
                ? Object.assign({}, acc, refreshChildren(routes[routeName]))
                : Object.assign({}, acc, (_a = {}, _a[routeName] = routes[routeName], _a));
        }), ( /** @type {?} */({})));
    });
    /**
     * Returns the next hub value
     * @template R, C
     * @param {?} routeName
     * @param {?} routes
     * @return {?}
     */
    function nextHubValue(routeName, routes) {
        var _a;
        /** @type {?} */
        var slice = entitify(routes);
        return ( /** @type {?} */(Object.assign({}, hub.value, (_a = {},
            _a[routeName] = slice,
            _a))));
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * Creates main parent routes
     * Entry point for the hub
     * @template R, C
     * @param {?} routes
     * @param {?=} routeName
     * @return {?}
     */
    function createRoot(routes, routeName) {
        if (routeName === void 0) {
            routeName = 'app';
        }
        if (hub.value !== null) {
            throw new Error('Routeshub is already declared');
        }
        /** @type {?} */
        var rootSlice = enhance(null, routes);
        /** @type {?} */
        var initialRoutesState = nextHubValue(routeName, rootSlice);
        hub.next(initialRoutesState);
        return hub.value[routeName];
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * Creates a feature route
     * @template R, C
     * @param {?} parentRoute
     * @param {?} routes
     * @return {?}
     */
    function createFeature(parentRoute, routes) {
        /** @type {?} */
        var feature = enhance(parentRoute, routes);
        /** @type {?} */
        var updatedRouteState = nextHubValue(parentRoute.routeName, feature);
        hub.next(updatedRouteState);
        return hub.value[parentRoute.routeName];
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.rootNote = rootNote;
    exports.createRoot = createRoot;
    exports.createFeature = createFeature;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=routeshub.umd.js.map