"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var Lint = require("tslint");
var ts = require("typescript");
var Rule = (function (_super) {
    tslib_1.__extends(Rule, _super);
    function Rule() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Rule.prototype.apply = function (sourceFile) {
        return this.applyWithWalker(new RuleWalker(sourceFile, this.getOptions()));
    };
    return Rule;
}(Lint.Rules.AbstractRule));
exports.Rule = Rule;
var RuleWalker = (function (_super) {
    tslib_1.__extends(RuleWalker, _super);
    function RuleWalker() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RuleWalker.prototype.visitPropertyAccessExpression = function (node) {
        var name = node.name;
        var parent = node.parent;
        if (name &&
            parent &&
            parent.operatorToken &&
            parent.operatorToken.kind === ts.SyntaxKind.EqualsToken &&
            parent.right &&
            parent.right.kind === ts.SyntaxKind.FalseKeyword &&
            name.getText() === 'escapeMarkup') {
            this.addFailureAtNode(node, 'Markup escaping disabled');
        }
        _super.prototype.visitPropertyAccessExpression.call(this, node);
    };
    return RuleWalker;
}(Lint.RuleWalker));
