"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var Lint = require("tslint");
var Rule = (function (_super) {
    tslib_1.__extends(Rule, _super);
    function Rule() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Rule.prototype.apply = function (sourceFile) {
        return this.applyWithWalker(new RuleWalker(sourceFile, this.getOptions()));
    };
    return Rule;
}(Lint.Rules.AbstractRule));
exports.Rule = Rule;
var RuleWalker = (function (_super) {
    tslib_1.__extends(RuleWalker, _super);
    function RuleWalker() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RuleWalker.prototype.visitCallExpression = function (node) {
        var name = node.expression.name;
        var _a = node.arguments || [], targetOrigin = _a[1];
        if (name &&
            targetOrigin &&
            name.getText() === 'postMessage' &&
            (targetOrigin.text || '').trim() === '*') {
            this.addFailureAtNode(node, 'Found a wildcard keyword (*) in the targetOrigin argument');
        }
        _super.prototype.visitCallExpression.call(this, node);
    };
    return RuleWalker;
}(Lint.RuleWalker));
