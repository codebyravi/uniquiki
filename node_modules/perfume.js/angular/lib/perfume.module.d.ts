import { AfterViewInit, InjectionToken, ModuleWithProviders } from '@angular/core';
import Perfume, { IPerfumeConfig } from 'perfume.js';
export declare let perfume: any;
export declare const PERFUME_CONFIG: InjectionToken<{}>;
export declare class PerfumeRootModule {
    config: IPerfumeConfig;
    constructor(config: IPerfumeConfig);
}
export declare class NgPerfume {
    perfume: Perfume;
    config: IPerfumeConfig;
    firstPaintDuration: number;
    firstContentfulPaintDuration: number;
    firstInputDelayDuration: number;
    observeFirstContentfulPaint: Promise<number>;
    observeFirstInputDelay: Promise<number>;
    observeTimeToInteractive?: Promise<number>;
    timeToInteractiveDuration: number;
    constructor();
    start(metricName: string): void;
    end(metricName: string): void | number;
    endPaint(metricName: string): Promise<void | number>;
    log(metricName: string, duration: number): void;
    sendTiming(metricName: string, duration: number): void;
}
export declare class PerfumeModule {
    static forRoot(config: any): ModuleWithProviders;
}
/**
 * Describes any Angular component class that implements `AfterViewInit`.
 */
export interface AfterViewInitable {
    prototype: AfterViewInit;
    new (...args: any[]): AfterViewInit;
}
/**
 * Component View Init (CVI) decorator
 * Marks the time between the constructor is initialized,
 * and ngAfterViewInit execution ends.
 */
export declare function PerfumeAfterViewInit(targetName?: string): (target: AfterViewInitable) => any;
